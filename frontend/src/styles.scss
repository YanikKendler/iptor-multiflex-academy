
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

@import "app/variables";

// Define the theme object.
$frontend-theme: mat.define-theme((
  color: (
    theme-type: light,
    primary: mat.$azure-palette,
    tertiary: mat.$blue-palette,
  ),
  density: (
    scale: 0,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($frontend-theme);
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($frontend-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($frontend-theme);
/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
*{
  margin: 0;
  padding: 0;
  font: inherit;
  box-sizing: border-box;
}

a{
  text-decoration: none;
  color: inherit;

  &:hover{
    text-decoration: underline;
  }
}

:root{
  --mdc-outlined-button-outline-width: 2px;
  --mdc-outlined-button-container-shape: .5rem;

  --mdc-text-button-container-shape: .5rem;

  --mdc-filled-button-container-shape: .5rem;

  --mat-badge-background-color: #{$secondary-400};

 /* --mdc-checkbox-selected-icon-color: #{$secondary-500};

  --mat-minimal-pseudo-checkbox-selected-checkmark-color: #{$secondary-500};
  --mat-full-pseudo-checkbox-selected-icon-color: #{$secondary-500};*/
}

input, textarea{
  padding: 0.5rem;
  border: 2px solid $gray-500;
  border-radius: 0.3rem;
  outline: none;

  &:focus-visible{
    border-color: $gray-250;
  }
}

//region color input
input[type="color"] {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  background: none;
  border: 0;
  cursor: pointer;
  height: 1.5rem;
  width: 1.5rem;
  padding: 0;
  overflow: hidden;

}

::-webkit-color-swatch{
  border: 1px solid $gray-500;
  border-radius: .3rem;
}

::-webkit-color-swatch-wrapper {
  padding: 0;
}

::-moz-color-swatch,
::-moz-focus-inner{
  border-radius: .3rem;
  border: 1px solid $gray-500;
}

::-moz-focus-inner{
  padding: 0;
}
//endregion

body {
  .mat-badge-content{
    outline: 2px solid var(--badge-border-color, white);
  }

  .mat-mdc-checkbox.mat-mdc-checkbox-checked .mdc-checkbox__background, .mdc-checkbox__ripple {
    background-color: $secondary-500 !important;
    border-color: $secondary-500 !important;
  }

  .mdc-checkbox{
    height: 29px !important;
    width: 29px !important;
    flex: initial;
  }

  .mat-mdc-checkbox{
    height: 4rem !important;
    width: 4rem !important;

    .mdc-checkbox__background {
      height: 29px !important;
      width: 29px !important;
      border-color: $gray-500;
      border-radius: .3rem;
    }

    .mdc-checkbox__native-control{
      height: 4rem !important;
      width: 4rem !important;
    }
  }

  .mdc-button {
    height: 2rem;
    white-space: nowrap;

    &:not([color="secondary"]):not([color="error"]) {
      &[mat-button] {
        color: $primary-500;
      }

      &[mat-flat-button] {
        background-color: $primary-500;

        &.cdk-focused {
          background-color: $primary-600;
        }
      }

      &[mat-stroked-button] {
        color: black;
        background-color: hsla(188, 61%, 30%, 0.2);
        border-color: $primary-500;
      }
    }

    &[color="secondary"] {
      background-color: $secondary-500;

      &[mat-stroked-button] {
        color: $secondary-100;
        background-color: hsla(31, 100%, 47%, 0.2);
        border-color: $secondary-500;
      }
    }

    &[color="error"] {
      color: white;

      &.cdk-focused{
        .mat-mdc-button-persistent-ripple{
          background-color: rgba(255, 0, 0, 0.1);
        }
      }

      &[mat-button]{
        color: darkred;
      }

      &[mat-flat-button]{
        background-color: darkred;
      }

      &[mat-stroked-button] {
        background-color: hsla(0, 100%, 40%, 0.2);
        border-color: darkred;
      }
    }

    .mdc-button__label {
      display: flex;
      flex-direction: row;
      gap: .5rem;
      color: inherit;
    }

    span.mat-mdc-button-persistent-ripple{
      inset: -4px;
    }
  }

  .mdc-button.mat-success,
  .mat-mdc-stroked-button.mat-success {
    color: #155724;
  }
  .mat-mdc-unelevated-button.mat-success:hover,
  .mat-mdc-raised-button.mat-success:hover {
    color: #f0fff3;
    background-color: #1b742f;
  }

  .mat-mdc-unelevated-button:not(:disabled, :hover).mat-success,
  .mat-mdc-raised-button.mat-success,
  .mat-mdc-fab.mat-success,
  .mat-mdc-mini-fab.mat-success {
    color: #f0fff3;
    background-color: #155724;
  }
  .mat-mdc-icon-button.mat-success {
    color: #155724;
  }

  mat-spinner{
    --mdc-circular-progress-active-indicator-color: #{$gray-400};
  }
}
